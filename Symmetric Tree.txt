# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:

        return self.CheckEqual(root.left,root.right)

    def CheckEqual (self, l,r):
        ans = True

        if (l == None and r == None):
            return True
        if (l != None and r == None):
            return False
        if (l == None and r != None):
            return False
        if l.val != r.val: 
            ans = False
        ans = ans and self.CheckEqual(l.left,r.right) and self.CheckEqual(l.right,r.left)
        return (ans)